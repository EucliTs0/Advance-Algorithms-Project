when talk inheritance objectoriented programming languages concept invented 1967 simula usually talking way form new classes classes instances called objects involve using classes already defined
derived classes intended help reuse existing code little modification new classes take or inherit attributes behavior preexisting classes usually referred base classes or ancestor classes
categorization computer languages powerful way number processing information inheritance provides support representation categorization furthermore fundamental helping humans learn means generalization known specific entities applied wider group given belongs relation established cognitive processing involves less information acquired stored specific entity actual fact particularities
an instance fruit generalization apple orange mango many others inheritance also sometimes referred generalization isa relationships represent hierarchy amongst classes objects it considered fruit abstraction apple orange etc conversely since apples fruit may naturally inherit properties common fruit fleshy container seed plant
modules sufficiently similarities interfaces would able share lot code therefore reducing complexity program this known one advantages inheritance therefore inheritance known view dual describes many parts code control shared control code named polymorphism
on hand inheritance normally accomplished either replacing one methods exposed ancestor adding new methods exposed ancestor a well known term used replacing act called overriding
